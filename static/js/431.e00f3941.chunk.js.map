{"version":3,"file":"static/js/431.e00f3941.chunk.js","mappings":"8KACA,QAA2C,6CAA3C,EAAoG,8BAApG,EAAkJ,kCAAlJ,EAAyM,uCAAzM,EAA4Q,8CAA5Q,EAA4U,oCAA5U,EAAqY,uC,aCKrY,MAmCA,EAnCmBA,IAAwB,IAAvB,KAAEC,EAAI,QAAEC,GAASF,EACnC,MAAMG,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAA2BC,SACnC,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAMQ,KAAIC,IACTL,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CACHL,UAAWC,EACXK,GAAI,WAAWF,EAAMG,KACrBC,MAAOX,EAASK,UAEhBO,EAAAA,EAAAA,MAAA,MAAmBT,UAAWC,EAAYC,SAAA,EACxCH,EAAAA,EAAAA,KAAA,OACEC,UAAWC,EACXS,IACEN,EAAMO,YACF,GAAGf,KAAWQ,EAAMO,cACpBC,EAENC,IAAKT,EAAMU,SAEbL,EAAAA,EAAAA,MAAA,OAAKT,UAAWC,EAA4BC,SAAA,EAC1CO,EAAAA,EAAAA,MAAA,MAAIT,UAAWC,EAAkBC,SAAA,CAAC,KAAGE,EAAMU,MAAM,SACjDL,EAAAA,EAAAA,MAAA,OAAKT,UAAWC,EAAqBC,SAAA,EACnCO,EAAAA,EAAAA,MAAA,KAAAP,SAAA,CAAG,QAAME,EAAMW,aAAa,UAC5BN,EAAAA,EAAAA,MAAA,KAAAP,SAAA,CAAG,SAAOE,EAAMY,wBAdbZ,EAAMG,SAoBhB,C,4ECpCT,QAAuB,uBAAvB,EAA4D,8BAA5D,EAA4G,kC,aCO5G,MA+BA,EA/BiBU,KACf,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,KAErCC,EAAAA,EAAAA,YAAU,MACRC,EAAAA,EAAAA,MACGC,MAAK5B,IAEJwB,EAAUxB,EAAK6B,MAAM,EAAG,IAAI,IAE7BC,OAAMC,IAELC,QAAQD,MAAM,kCAAmCA,EAAM,GACvD,GACH,IAEH,MAAME,EAAeV,EAAOW,MAAK,CAACC,EAAGC,IAAMA,EAAEhB,aAAee,EAAEf,eAE9D,OACEN,EAAAA,EAAAA,MAAA,OAAKT,UAAWC,EAAOC,SAAA,EACrBO,EAAAA,EAAAA,MAAA,MAAIT,UAAWC,EAAcC,SAAA,CAAC,qBACXH,EAAAA,EAAAA,KAAA,QAAMC,UAAWC,EAAkBC,SAAC,kBAEvDH,EAAAA,EAAAA,KAACiC,EAAAA,EAAU,CACTrC,KAAMuB,EACNtB,QAAQ,kCACRgC,aAAcA,MAEZ,C,iGCnCV,MAAMK,EAAW,+BACXC,EAAU,CACdC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,+PAICC,eAAejB,IAGpB,OAAOkB,MAFK,GAAGP,uCAEGC,GACfX,MAAKkB,IACJ,IAAKA,EAAIC,GACP,MAAM,IAAIC,MAAM,mCAElB,OAAOF,EAAIG,MAAM,IAElBrB,MAAK5B,GAEGA,EAAKkD,UAGbpB,OAAMC,IACLC,QAAQD,MAAM,kCAAmCA,GAC1C,OAEb,CAEOa,eAAeO,EAAiBC,GACrC,MAAMC,EAAM,GAAGf,wBAA+Bc,UADEE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAG7CG,QAAeZ,MAAMQ,EAAKd,GAEhC,IAAKkB,EAAOV,GAAI,MAAM,IAAIC,MAAM,gBAEhC,OAAOS,EAAOR,MAChB,CAEOL,eAAec,EAAkBC,GACtC,MAAMN,EAAM,GAAGf,WAAkBqB,IAG3BF,QAAeZ,MAAMQ,EAAKd,GAChC,IAAKkB,EAAOV,GAAI,MAAM,IAAIC,MAAM,iCAChC,OAAOS,EAAOR,MAChB,CAEOL,eAAegB,EAAkBD,GACtC,MAAMN,EAAM,GAAGf,WAAkBqB,YAE3BF,QAAeZ,MAAMQ,EAAKd,GAChC,IAAKkB,EAAOV,GAAI,MAAM,IAAIC,MAAM,iCAChC,OAAOS,EAAOR,MAChB,CAEOL,eAAeiB,EAAkBF,GACtC,MAAMN,EAAM,GAAGf,WAAkBqB,YAE3BF,QAAeZ,MAAMQ,EAAKd,GAChC,IAAKkB,EAAOV,GAAI,MAAM,IAAIC,MAAM,iCAChC,OAAOS,EAAOR,MAChB,CAEOL,eAAekB,EAAiBV,GACrC,MAAMC,EAAM,GAAGf,yBAAgCc,UADCE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAG7CG,QAAeZ,MAAMQ,EAAKd,GAChC,IAAKkB,EAAOV,GAAI,MAAM,IAAIC,MAAM,6BAChC,OAAOS,EAAOR,MAChB,CAEOL,eAAemB,EAAiBC,GACrC,MAAMX,EAAM,GAAGf,8BAAqC0B,UADDV,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAGhDG,QAAeZ,MAAMQ,EAAKd,GAChC,IAAKkB,EAAOV,GAAI,MAAM,IAAIC,MAAM,4CAChC,OAAOS,EAAOR,MAChB,CAEOL,eAAeqB,EAAqBD,GACzC,MAAMX,EAAM,GAAGf,YAAmB0B,IAE5BP,QAAeZ,MAAMQ,EAAKd,GAChC,IAAKkB,EAAOV,GAAI,MAAM,IAAIC,MAAM,sCAChC,OAAOS,EAAOR,MAChB,C","sources":["webpack://react-rework-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://react-rework-05-movies/./src/pages/HomePage/HomePage.module.css?5baa","pages/HomePage/HomePage.jsx","services/movies-services.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"listTrendingFilmsWrapper\":\"MoviesList_listTrendingFilmsWrapper__UJoXT\",\"itemMovie\":\"MoviesList_itemMovie__hT6qi\",\"linkMovieList\":\"MoviesList_linkMovieList__lRQLp\",\"imageTrendingMovie\":\"MoviesList_imageTrendingMovie__ZoTXz\",\"wrapperTrendingMovieTexts\":\"MoviesList_wrapperTrendingMovieTexts__BIRNN\",\"titleTrendMovie\":\"MoviesList_titleTrendMovie__n0G6+\",\"pWrapperTrendMovie\":\"MoviesList_pWrapperTrendMovie__79mO-\"};","import { Link, useLocation } from 'react-router-dom';\n\nimport defaultPoster from '../../images/lfc-logo.webp';\n\nimport s from './MoviesList.module.css';\n\nconst MoviesList = ({ data, baseUrl }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={s.listTrendingFilmsWrapper}>\n      {data?.map(movie => (\n        <Link\n          className={s.linkMovieList}\n          to={`/movies/${movie.id}`}\n          state={location}\n        >\n          <li key={movie.id} className={s.itemMovie}>\n            <img\n              className={s.imageTrendingMovie}\n              src={\n                movie.poster_path\n                  ? `${baseUrl}/${movie.poster_path}`\n                  : defaultPoster\n              }\n              alt={movie.title}\n            />\n            <div className={s.wrapperTrendingMovieTexts}>\n              <h3 className={s.titleTrendMovie}>''{movie.title}''</h3>\n              <div className={s.pWrapperTrendMovie}>\n                <p>Rate:{movie.vote_average}/10</p>\n                <p>Year: {movie.release_date}</p>\n              </div>\n            </div>\n          </li>\n        </Link>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"home\":\"HomePage_home__N+EMb\",\"TitleTopTen\":\"HomePage_TitleTopTen__MS5Xw\",\"titleSpanTopTen\":\"HomePage_titleSpanTopTen__IfuXv\",\"itemMovie\":\"HomePage_itemMovie__oJlrW\"};","import { useEffect, useState } from 'react';\n\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nimport { fetchTrendingMovies } from 'services/movies-services';\n\nimport s from './HomePage.module.css';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetchTrendingMovies()\n      .then(data => {\n        // Это срабатывает при успешном получении данных\n        setMovies(data.slice(0, 10));\n      })\n      .catch(error => {\n        // Этот блок ловит все ошибки, включая те, что происходят в любом из then\n        console.error('Error fetching trending movies:', error);\n      });\n  }, []);\n\n  const sortedMovies = movies.sort((a, b) => b.vote_average - a.vote_average);\n\n  return (\n    <div className={s.home}>\n      <h1 className={s.TitleTopTen}>\n        TOP-10: Trending <span className={s.titleSpanTopTen}>this week</span>\n      </h1>\n      <MoviesList\n        data={movies}\n        baseUrl=\"https://image.tmdb.org/t/p/w200\"\n        sortedMovies={sortedMovies}\n      />\n    </div>\n  );\n};\n\nexport default HomePage;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxYTQ0NWVhZTQwMTY5ODllMGM1ZjVmNzg5MDRhYzE0YyIsIm5iZiI6MTczMTU5OTQyNS4xMDgyNTcsInN1YiI6IjY1ZGY2NDg3Yjc2Y2JiMDE2M2Q4MzNkNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.O8jUWu95b2bCdx3mildt7AG2oKspuZGBhdzndcu47T0',\n  },\n};\n\nexport async function fetchTrendingMovies() {\n  const url = `${BASE_URL}/trending/movie/week?language=en-US`;\n\n  return fetch(url, options)\n    .then(res => {\n      if (!res.ok) {\n        throw new Error('Failed to fetch trending movies');\n      }\n      return res.json();\n    })\n    .then(data => {\n      // console.log('Fetched movies:', data.results);\n      return data.results;\n    }) // Возвращаем массив фильмов\n\n    .catch(error => {\n      console.error('Error fetching trending movies:', error);\n      return null; // Возвращаем null в случае ошибки\n    });\n}\n\nexport async function getMoviesByQuery(query, page = 1) {\n  const url = `${BASE_URL}/search/movie?query=${query}&page=${page}`;\n\n  const result = await fetch(url, options);\n\n  if (!result.ok) throw new Error('Fetch failed');\n\n  return result.json();\n}\n\nexport async function fetchMovieDetails(movie_id) {\n  const url = `${BASE_URL}/movie/${movie_id}`;\n  // console.log('Fetching from URL:', url);\n\n  const result = await fetch(url, options);\n  if (!result.ok) throw new Error('Failed to fetch movie details');\n  return result.json();\n}\n\nexport async function fetchMovieCredits(movie_id) {\n  const url = `${BASE_URL}/movie/${movie_id}/credits`;\n\n  const result = await fetch(url, options);\n  if (!result.ok) throw new Error('Failed to fetch movie credits');\n  return result.json();\n}\n\nexport async function fetchMovieReviews(movie_id) {\n  const url = `${BASE_URL}/movie/${movie_id}/reviews`;\n\n  const result = await fetch(url, options);\n  if (!result.ok) throw new Error('Failed to fetch movie reviews');\n  return result.json();\n}\n\nexport async function getActorsByQuery(query, page = 1) {\n  const url = `${BASE_URL}/search/person?query=${query}&page=${page}`;\n\n  const result = await fetch(url, options);\n  if (!result.ok) throw new Error('No actors are found here.');\n  return result.json();\n}\n\nexport async function getMoviesByActor(actor_id, page = 1) {\n  const url = `${BASE_URL}/discover/movie?with_cast=${actor_id}&page=${page}`;\n\n  const result = await fetch(url, options);\n  if (!result.ok) throw new Error('Failed to fetch the movies of this actor');\n  return result.json();\n}\n\nexport async function getActorPhotoAndInfo(actor_id) {\n  const url = `${BASE_URL}/person/${actor_id}`;\n\n  const result = await fetch(url, options);\n  if (!result.ok) throw new Error('Failed to fetch actor photo & info');\n  return result.json();\n}\n"],"names":["_ref","data","baseUrl","location","useLocation","_jsx","className","s","children","map","movie","Link","to","id","state","_jsxs","src","poster_path","defaultPoster","alt","title","vote_average","release_date","HomePage","movies","setMovies","useState","useEffect","fetchTrendingMovies","then","slice","catch","error","console","sortedMovies","sort","a","b","MoviesList","BASE_URL","options","method","headers","accept","Authorization","async","fetch","res","ok","Error","json","results","getMoviesByQuery","query","url","arguments","length","undefined","result","fetchMovieDetails","movie_id","fetchMovieCredits","fetchMovieReviews","getActorsByQuery","getMoviesByActor","actor_id","getActorPhotoAndInfo"],"sourceRoot":""}