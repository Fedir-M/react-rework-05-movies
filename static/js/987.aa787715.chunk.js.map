{"version":3,"file":"static/js/987.aa787715.chunk.js","mappings":"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","sources":["webpack://react-rework-05-movies/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","webpack://react-rework-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://react-rework-05-movies/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","webpack://react-rework-05-movies/./src/pages/MoviesPage/MoviesPage.module.css?7ea7","pages/MoviesPage/MoviesPage.jsx","services/movies-services.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__wiIYs\"};","import s from './Button.module.css';\n\nconst Button = ({ onClick, label, type = 'button', className = '' }) => {\n  return (\n    <button\n      className={`${s.button} ${className}`}\n      type={type}\n      onClick={onClick}\n    >\n      {label}\n    </button>\n  );\n};\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"listTrendingFilmsWrapper\":\"MoviesList_listTrendingFilmsWrapper__UJoXT\",\"itemMovie\":\"MoviesList_itemMovie__hT6qi\",\"linkMovieList\":\"MoviesList_linkMovieList__lRQLp\",\"imageTrendingMovie\":\"MoviesList_imageTrendingMovie__ZoTXz\",\"wrapperTrendingMovieTexts\":\"MoviesList_wrapperTrendingMovieTexts__BIRNN\",\"titleTrendMovie\":\"MoviesList_titleTrendMovie__n0G6+\",\"pWrapperTrendMovie\":\"MoviesList_pWrapperTrendMovie__79mO-\"};","import { Link, useLocation } from 'react-router-dom';\n\nimport defaultPoster from '../../images/lfc-logo.webp';\n\nimport s from './MoviesList.module.css';\n\nconst MoviesList = ({ data, baseUrl }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={s.listTrendingFilmsWrapper}>\n      {data?.map(movie => (\n        <Link\n          className={s.linkMovieList}\n          to={`/movies/${movie.id}`}\n          state={location}\n        >\n          <li key={movie.id} className={s.itemMovie}>\n            <img\n              className={s.imageTrendingMovie}\n              src={\n                movie.poster_path\n                  ? `${baseUrl}/${movie.poster_path}`\n                  : defaultPoster\n              }\n              alt={movie.title}\n            />\n            <div className={s.wrapperTrendingMovieTexts}>\n              <h3 className={s.titleTrendMovie}>''{movie.title}''</h3>\n              <div className={s.pWrapperTrendMovie}>\n                <p>Rate:{movie.vote_average}/10</p>\n                <p>Year: {movie.release_date}</p>\n              </div>\n            </div>\n          </li>\n        </Link>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchBar_form__gW7Gj\",\"inputSearch\":\"SearchBar_inputSearch__ryI-y\"};","import Button from 'components/Button/Button';\nimport { useState } from 'react';\n\nimport s from './SearchBar.module.css';\nimport { useSearchParams } from 'react-router-dom';\n\nconst SearchBar = ({\n  placeholder = 'Search movie',\n  className = '',\n  paramQuery = 'movieQuery',\n}) => {\n  // eslint-disable-next-line no-unused-vars\n  const [searchParams, setsearchParams] = useSearchParams();\n  const [inputQuery, setInputQuery] = useState(\n    searchParams.get(paramQuery) ?? ''\n  );\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (inputQuery.trim() === '') return;\n\n    setsearchParams({ query: inputQuery.trim(), page: 1 });\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <input\n        onChange={e => setInputQuery(e.target.value)}\n        value={inputQuery}\n        placeholder={placeholder}\n        className={s.inputSearch}\n      />\n      <Button className={s.buttonSearch} label=\"Search\" type=\"submit\" />\n    </form>\n  );\n};\n\nexport default SearchBar;\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesPageWrapper\":\"MoviesPage_moviesPageWrapper__gT6b5\",\"MoviesListOnMoviePage\":\"MoviesPage_MoviesListOnMoviePage__HLklE\"};","import { Suspense } from 'react';\nimport Button from 'components/Button/Button';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport React, { useEffect, useState } from 'react';\nimport { getMoviesByQuery } from 'services/movies-services';\nimport { ProgressBar } from 'react-loader-spinner';\n\nimport s from './MoviesPage.module.css';\nimport { useSearchParams } from 'react-router-dom';\n\n// ../movies/?query=cat&page=2\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  //\n  const searchQuery = searchParams.get('query') ?? '';\n  const page = Number(searchParams.get('page')) || 1;\n  // const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [totalPages, setTotelPages] = useState(1);\n  // const [page, setPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const getMovies = async () => {\n      if (!searchQuery) return;\n\n      setIsLoading(true);\n\n      try {\n        const result = await getMoviesByQuery(searchQuery, page);\n        console.log('Movies data>>', result);\n        setMovies(prevMovies =>\n          page === 1 ? result.results : [...prevMovies, ...result.results]\n        );\n        setTotelPages(result.total_pages);\n\n        // setSearchQuery('');\n      } catch (error) {\n        throw new Error('Pizdec fse propalo');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovies();\n  }, [searchQuery, page]);\n\n  const onLoadMore = () => {\n    setSearchParams({ query: searchQuery, page: page + 1 });\n  };\n\n  console.log(totalPages);\n\n  return (\n    <div className={s.moviesPageWrapper}>\n      <SearchBar />\n      {isLoading && (\n        <ProgressBar\n          height=\"80\"\n          width=\"150\"\n          ariaLabel=\"progress-bar-loading\"\n          barColor=\"#dae962\"\n          borderColor=\"#125a1f\"\n          className={s.loader}\n          wrapperClass={s.customProgressBar}\n        />\n      )}\n      <Suspense fallback={<ProgressBar />}>\n        <MoviesList\n          className={s.MoviesListOnMoviePage}\n          data={movies}\n          baseUrl=\"https://image.tmdb.org/t/p/w200\"\n        />\n      </Suspense>\n      {!isLoading && movies.length > 0 && totalPages > page && (\n        <Button\n          onClick={onLoadMore}\n          label=\"Load more...\"\n          type=\"button\"\n          className={s.loadMoreButton}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default MoviesPage;\n\n// MoviePage -> (setQuery) <-SearchBar - input(string) - submit -> setQuery(string)\n// useEffect(() => {}, [query])\n// MoviePage -> (query) ([{}, {}])<-API\n// MoviePage -> (data) MovieList(data) -> ul-li-li-li\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxYTQ0NWVhZTQwMTY5ODllMGM1ZjVmNzg5MDRhYzE0YyIsIm5iZiI6MTczMTU5OTQyNS4xMDgyNTcsInN1YiI6IjY1ZGY2NDg3Yjc2Y2JiMDE2M2Q4MzNkNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.O8jUWu95b2bCdx3mildt7AG2oKspuZGBhdzndcu47T0',\n  },\n};\n\nexport async function fetchTrendingMovies() {\n  const url = `${BASE_URL}/trending/movie/week?language=en-US`;\n\n  return fetch(url, options)\n    .then(res => {\n      if (!res.ok) {\n        throw new Error('Failed to fetch trending movies');\n      }\n      return res.json();\n    })\n    .then(data => {\n      // console.log('Fetched movies:', data.results);\n      return data.results;\n    }) // Возвращаем массив фильмов\n\n    .catch(error => {\n      console.error('Error fetching trending movies:', error);\n      return null; // Возвращаем null в случае ошибки\n    });\n}\n\nexport async function getMoviesByQuery(query, page = 1) {\n  const url = `${BASE_URL}/search/movie?query=${query}&page=${page}`;\n\n  const result = await fetch(url, options);\n\n  if (!result.ok) throw new Error('Fetch failed');\n\n  return result.json();\n}\n\nexport async function fetchMovieDetails(movie_id) {\n  const url = `${BASE_URL}/movie/${movie_id}`;\n  // console.log('Fetching from URL:', url);\n\n  const result = await fetch(url, options);\n  if (!result.ok) throw new Error('Failed to fetch movie details');\n  return result.json();\n}\n\nexport async function fetchMovieCredits(movie_id) {\n  const url = `${BASE_URL}/movie/${movie_id}/credits`;\n\n  const result = await fetch(url, options);\n  if (!result.ok) throw new Error('Failed to fetch movie credits');\n  return result.json();\n}\n\nexport async function fetchMovieReviews(movie_id) {\n  const url = `${BASE_URL}/movie/${movie_id}/reviews`;\n\n  const result = await fetch(url, options);\n  if (!result.ok) throw new Error('Failed to fetch movie reviews');\n  return result.json();\n}\n\nexport async function getActorsByQuery(query, page = 1) {\n  const url = `${BASE_URL}/search/person?query=${query}&page=${page}`;\n\n  const result = await fetch(url, options);\n  if (!result.ok) throw new Error('No actors are found here.');\n  return result.json();\n}\n\nexport async function getMoviesByActor(actor_id, page = 1) {\n  const url = `${BASE_URL}/discover/movie?with_cast=${actor_id}&page=${page}`;\n\n  const result = await fetch(url, options);\n  if (!result.ok) throw new Error('Failed to fetch the movies of this actor');\n  return result.json();\n}\n\nexport async function getActorPhotoAndInfo(actor_id) {\n  const url = `${BASE_URL}/person/${actor_id}`;\n\n  const result = await fetch(url, options);\n  if (!result.ok) throw new Error('Failed to fetch actor photo & info');\n  return result.json();\n}\n"],"names":["_ref","onClick","label","type","className","_jsx","s","children","data","baseUrl","location","useLocation","map","movie","Link","to","id","state","_jsxs","src","poster_path","defaultPoster","alt","title","vote_average","release_date","_searchParams$get","placeholder","paramQuery","searchParams","setsearchParams","useSearchParams","inputQuery","setInputQuery","useState","get","onSubmit","e","preventDefault","trim","query","page","form","onChange","target","value","inputSearch","Button","buttonSearch","MoviesPage","setSearchParams","searchQuery","Number","movies","setMovies","totalPages","setTotelPages","isLoading","setIsLoading","useEffect","async","result","getMoviesByQuery","console","log","prevMovies","results","total_pages","error","Error","getMovies","moviesPageWrapper","SearchBar","ProgressBar","height","width","ariaLabel","barColor","borderColor","loader","wrapperClass","customProgressBar","Suspense","fallback","MoviesList","MoviesListOnMoviePage","length","onLoadMore","loadMoreButton","BASE_URL","options","method","headers","accept","Authorization","fetchTrendingMovies","fetch","then","res","ok","json","catch","url","arguments","undefined","fetchMovieDetails","movie_id","fetchMovieCredits","fetchMovieReviews","getActorsByQuery","getMoviesByActor","actor_id","getActorPhotoAndInfo"],"sourceRoot":""}