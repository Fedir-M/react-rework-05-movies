{"version":3,"file":"static/js/22.998b06b5.chunk.js","mappings":"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","sources":["webpack://react-rework-05-movies/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","webpack://react-rework-05-movies/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","webpack://react-rework-05-movies/./src/components/ActorsList/ActorsList.module.css?94a0","components/ActorsList/ActorsList.jsx","webpack://react-rework-05-movies/./src/pages/ActorsPage/ActorsPage.module.css?3c6b","pages/ActorsPage/ActorsPage.jsx","services/movies-services.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__wiIYs\"};","import s from './Button.module.css';\n\nconst Button = ({ onClick, label, type = 'button', className = '' }) => {\n  return (\n    <button\n      className={`${s.button} ${className}`}\n      type={type}\n      onClick={onClick}\n    >\n      {label}\n    </button>\n  );\n};\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchBar_form__gW7Gj\",\"inputSearch\":\"SearchBar_inputSearch__ryI-y\"};","import Button from 'components/Button/Button';\nimport { useState } from 'react';\n\nimport s from './SearchBar.module.css';\nimport { useSearchParams } from 'react-router-dom';\n\nconst SearchBar = ({\n  placeholder = 'Search movie',\n  className = '',\n  paramQuery = 'movieQuery',\n}) => {\n  // eslint-disable-next-line no-unused-vars\n  const [searchParams, setsearchParams] = useSearchParams();\n  const [inputQuery, setInputQuery] = useState(\n    searchParams.get(paramQuery) ?? ''\n  );\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (inputQuery.trim() === '') return;\n\n    setsearchParams({ query: inputQuery.trim(), page: 1 });\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.form}>\n      <input\n        onChange={e => setInputQuery(e.target.value)}\n        value={inputQuery}\n        placeholder={placeholder}\n        className={s.inputSearch}\n      />\n      <Button className={s.buttonSearch} label=\"Search\" type=\"submit\" />\n    </form>\n  );\n};\n\nexport default SearchBar;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapperActorList\":\"ActorsList_wrapperActorList__RUa6t\",\"actorList\":\"ActorsList_actorList__GoDzd\",\"actorItem\":\"ActorsList_actorItem__Cpl1u\",\"actorName\":\"ActorsList_actorName__mMp6W\",\"imgWrapper\":\"ActorsList_imgWrapper__0m1r2\",\"actorImage\":\"ActorsList_actorImage__SvZ1Q\",\"default\":\"ActorsList_default__VNYD2\",\"actorTitleBlock\":\"ActorsList_actorTitleBlock__xQJW0\",\"actorPopularity\":\"ActorsList_actorPopularity__NzyIR\"};","import { Link } from 'react-router-dom';\nimport defaultProfile from '../../images/spy_1024x1024.webp';\nimport s from './ActorsList.module.css';\n\nconst ActorsList = ({ data, baseUrl, sortedPopularity }) => {\n  return (\n    <div className={s.wrapperActorList}>\n      <ul className={s.actorList}>\n        {sortedPopularity.map(actor => (\n          <Link\n            className={s.linkActorItem}\n            to={`/actors/${actor.id}/movies?page=1`}\n          >\n            <li key={actor.id} className={s.actorItem}>\n              <div className={s.imgWrapper}>\n                <img\n                  src={\n                    actor.profile_path\n                      ? `${baseUrl}${actor.profile_path}`\n                      : defaultProfile\n                  }\n                  alt={actor.name}\n                  className={\n                    actor.profile_path\n                      ? s.actorImage\n                      : `${s.actorImage} ${s.default}`\n                  }\n                />\n              </div>\n              <div className={s.actorTitleBlock}>\n                <h3 className={s.actorName}>{actor.name}</h3>\n                <p className={s.actorPopularity}>\n                  Popularity: {actor.popularity.toFixed(2)}\n                </p>\n              </div>\n            </li>\n          </Link>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ActorsList;\n","// extracted by mini-css-extract-plugin\nexport default {\"ActorPageWrapper\":\"ActorsPage_ActorPageWrapper__oHXfu\",\"titleActorPage\":\"ActorsPage_titleActorPage__ondbZ\"};","import { Suspense, useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport ActorsList from 'components/ActorsList/ActorsList';\nimport { ProgressBar } from 'react-loader-spinner';\nimport Button from 'components/Button/Button';\nimport { getActorsByQuery } from '../../services/movies-services';\n\nimport s from './ActorsPage.module.css';\n\nconst ActorsPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const actorsQuery = searchParams.get('query') ?? '';\n  const page = Number(searchParams.get('page')) || 1;\n  //\n  const [actors, setActors] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const getActors = async () => {\n      if (!actorsQuery) return;\n\n      setIsLoading(true);\n\n      try {\n        const result = await getActorsByQuery(actorsQuery, page);\n        // console.log('actor from api>>', result);\n        setActors(prevActors =>\n          page === 1 ? result.results : [...prevActors, ...result.results]\n        );\n      } catch (error) {\n        console.error('Error fetching actors:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getActors();\n  }, [actorsQuery, page]);\n\n  const onLoadMoreActors = () => {\n    setSearchParams({ query: actorsQuery, page: page + 1 });\n  };\n\n  const sortedPopularity = actors.sort((a, b) => b.popularity - a.popularity);\n\n  return (\n    <div className={s.ActorPageWrapper}>\n      <h2 className={s.titleActorPage}>You can find your actor here.</h2>\n      <SearchBar\n        paramQuery=\"actorQuery\"\n        placeholder=\"Search your actor\"\n        className={s.SearchBarActors}\n      />\n      <Suspense fallback={<ProgressBar />}>\n        <ActorsList\n          data={actors}\n          baseUrl=\"https://image.tmdb.org/t/p/w200\"\n          className={s.actorsList}\n          sortedPopularity={sortedPopularity}\n        />\n      </Suspense>\n      {isLoading && (\n        <ProgressBar\n          height=\"80\"\n          width=\"150\"\n          ariaLabel=\"progress-bar-loading\"\n          barColor=\"#dae962\"\n          borderColor=\"#125a1f\"\n          className={s.loader}\n        />\n      )}\n      {!isLoading && actors.length > 0 && (\n        <Button\n          onClick={onLoadMoreActors}\n          label=\"Load more...\"\n          type=\"button\"\n          className={s.loadMoreButton}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ActorsPage;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxYTQ0NWVhZTQwMTY5ODllMGM1ZjVmNzg5MDRhYzE0YyIsIm5iZiI6MTczMTU5OTQyNS4xMDgyNTcsInN1YiI6IjY1ZGY2NDg3Yjc2Y2JiMDE2M2Q4MzNkNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.O8jUWu95b2bCdx3mildt7AG2oKspuZGBhdzndcu47T0',\n  },\n};\n\nexport async function fetchTrendingMovies() {\n  const url = `${BASE_URL}/trending/movie/week?language=en-US`;\n\n  return fetch(url, options)\n    .then(res => {\n      if (!res.ok) {\n        throw new Error('Failed to fetch trending movies');\n      }\n      return res.json();\n    })\n    .then(data => {\n      // console.log('Fetched movies:', data.results);\n      return data.results;\n    }) // Возвращаем массив фильмов\n\n    .catch(error => {\n      console.error('Error fetching trending movies:', error);\n      return null; // Возвращаем null в случае ошибки\n    });\n}\n\nexport async function getMoviesByQuery(query, page = 1) {\n  const url = `${BASE_URL}/search/movie?query=${query}&page=${page}`;\n\n  const result = await fetch(url, options);\n\n  if (!result.ok) throw new Error('Fetch failed');\n\n  return result.json();\n}\n\nexport async function fetchMovieDetails(movie_id) {\n  const url = `${BASE_URL}/movie/${movie_id}`;\n  // console.log('Fetching from URL:', url);\n\n  const result = await fetch(url, options);\n  if (!result.ok) throw new Error('Failed to fetch movie details');\n  return result.json();\n}\n\nexport async function fetchMovieCredits(movie_id) {\n  const url = `${BASE_URL}/movie/${movie_id}/credits`;\n\n  const result = await fetch(url, options);\n  if (!result.ok) throw new Error('Failed to fetch movie credits');\n  return result.json();\n}\n\nexport async function fetchMovieReviews(movie_id) {\n  const url = `${BASE_URL}/movie/${movie_id}/reviews`;\n\n  const result = await fetch(url, options);\n  if (!result.ok) throw new Error('Failed to fetch movie reviews');\n  return result.json();\n}\n\nexport async function getActorsByQuery(query, page = 1) {\n  const url = `${BASE_URL}/search/person?query=${query}&page=${page}`;\n\n  const result = await fetch(url, options);\n  if (!result.ok) throw new Error('No actors are found here.');\n  return result.json();\n}\n\nexport async function getMoviesByActor(actor_id, page = 1) {\n  const url = `${BASE_URL}/discover/movie?with_cast=${actor_id}&page=${page}`;\n\n  const result = await fetch(url, options);\n  if (!result.ok) throw new Error('Failed to fetch the movies of this actor');\n  return result.json();\n}\n\nexport async function getActorPhotoAndInfo(actor_id) {\n  const url = `${BASE_URL}/person/${actor_id}`;\n\n  const result = await fetch(url, options);\n  if (!result.ok) throw new Error('Failed to fetch actor photo & info');\n  return result.json();\n}\n"],"names":["_ref","onClick","label","type","className","_jsx","s","children","_searchParams$get","placeholder","paramQuery","searchParams","setsearchParams","useSearchParams","inputQuery","setInputQuery","useState","get","_jsxs","onSubmit","e","preventDefault","trim","query","page","form","onChange","target","value","inputSearch","Button","buttonSearch","data","baseUrl","sortedPopularity","wrapperActorList","actorList","map","actor","Link","linkActorItem","to","id","actorItem","imgWrapper","src","profile_path","defaultProfile","alt","name","actorImage","actorTitleBlock","actorName","actorPopularity","popularity","toFixed","ActorsPage","setSearchParams","actorsQuery","Number","actors","setActors","isLoading","setIsLoading","useEffect","async","result","getActorsByQuery","prevActors","results","error","console","getActors","sort","a","b","ActorPageWrapper","titleActorPage","SearchBar","SearchBarActors","Suspense","fallback","ProgressBar","ActorsList","actorsList","height","width","ariaLabel","barColor","borderColor","loader","length","onLoadMoreActors","loadMoreButton","BASE_URL","options","method","headers","accept","Authorization","fetchTrendingMovies","fetch","then","res","ok","Error","json","catch","getMoviesByQuery","url","arguments","undefined","fetchMovieDetails","movie_id","fetchMovieCredits","fetchMovieReviews","getMoviesByActor","actor_id","getActorPhotoAndInfo"],"sourceRoot":""}