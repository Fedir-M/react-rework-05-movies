{"version":3,"file":"static/js/829.24e917d3.chunk.js","mappings":"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","sources":["webpack://react-rework-05-movies/./src/components/Button/Button.module.css?ce6f","components/Button/Button.jsx","webpack://react-rework-05-movies/./src/components/ExpandableText/ExpandableText.module.css?9231","components/ExpandableText/ExpandableText.jsx","webpack://react-rework-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","services/movies-services.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"Button_button__wiIYs\"};","import s from './Button.module.css';\n\nconst Button = ({ onClick, label, type = 'button', className = '' }) => {\n  return (\n    <button\n      className={`${s.button} ${className}`}\n      type={type}\n      onClick={onClick}\n    >\n      {label}\n    </button>\n  );\n};\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"expandableText\":\"ExpandableText_expandableText__9C2Q4\",\"clampedText\":\"ExpandableText_clampedText__zVEoV\",\"fullText\":\"ExpandableText_fullText__slzGn\",\"toggleButton\":\"ExpandableText_toggleButton__TRyBp\"};","import { useState } from 'react';\nimport Button from 'components/Button/Button';\n\nimport s from './ExpandableText.module.css';\n\nconst ExpandableText = ({ text }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const toggleExpand = () => setIsExpanded(!isExpanded);\n\n  return (\n    <div className={s.expandableText}>\n      <p className={isExpanded ? s.fullText : s.clampedText}>{text}</p>\n      {text.length > 35 && (\n        <Button\n          onClick={toggleExpand}\n          label={isExpanded ? 'Show less' : 'more...'}\n          className={s.toggleButton}\n        >\n          {isExpanded ? 'Show less' : 'more...'}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default ExpandableText;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapperReviews\":\"Reviews_wrapperReviews__uzH5Y\",\"castListTitle\":\"Reviews_castListTitle__+jAke\",\"listReviews\":\"Reviews_listReviews__wxEg6\",\"itemReviews\":\"Reviews_itemReviews__i5bhx\",\"autorDetailsContainer\":\"Reviews_autorDetailsContainer__y-xWg\",\"autorDetailsContainerTwo\":\"Reviews_autorDetailsContainerTwo__7wE9j\",\"imageReviews\":\"Reviews_imageReviews__nQ92R\",\"ratingReviews\":\"Reviews_ratingReviews__uoJz2\",\"spanNA\":\"Reviews_spanNA__4edjN\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from '../../services/movies-services';\nimport ExpandableText from '../ExpandableText/ExpandableText';\nimport spyPhoto from '../../images/spy_1024x1024.webp';\nimport s from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { movie_id } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getReviews = async () => {\n      try {\n        const reviews = await fetchMovieReviews(movie_id);\n        setReviews(reviews.results);\n      } catch (err) {\n        console.error('Error fetching reviews:', err);\n        setError(err.message);\n      }\n    };\n\n    getReviews();\n  }, [movie_id]);\n\n  if (error) return <p>Error: {error}</p>;\n\n  return (\n    <div className={s.wrapperReviews}>\n      <h3 className={s.castListTitle}>REVIEWS</h3>\n      {reviews.length === 0 ? (\n        <p className={s.noReviewsMessage}>There are NO reviews yet.</p>\n      ) : (\n        <ul className={s.listReviews}>\n          {reviews.map(review => (\n            <li key={review.id} className={s.itemReviews}>\n              <ExpandableText text={review.content} />\n              <div className={s.autorDetailsContainer}>\n                <img\n                  className={s.imageReviews}\n                  src={\n                    review.author_details.avatar_path\n                      ? `https://image.tmdb.org/t/p/w200${review.author_details.avatar_path}`\n                      : spyPhoto\n                  }\n                  alt={review.username}\n                />\n                <div className={s.autorDetailsContainerTwo}>\n                  <p className={s.usernameReviews}>{review.username}</p>\n                  <p className={s.ratingReviews}>\n                    Like:{' '}\n                    {review.rating || <span className={s.spanNA}>'N/A'</span>}\n                  </p>\n                  <p className={s.dateAtReviews}>\n                    Created at:{' '}\n                    {new Date(review.created_at).toLocaleDateString('en-US', {\n                      month: 'long',\n                      day: 'numeric',\n                      year: 'numeric',\n                    })}\n                  </p>\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxYTQ0NWVhZTQwMTY5ODllMGM1ZjVmNzg5MDRhYzE0YyIsIm5iZiI6MTczMTU5OTQyNS4xMDgyNTcsInN1YiI6IjY1ZGY2NDg3Yjc2Y2JiMDE2M2Q4MzNkNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.O8jUWu95b2bCdx3mildt7AG2oKspuZGBhdzndcu47T0',\n  },\n};\n\nexport async function fetchTrendingMovies() {\n  const url = `${BASE_URL}/trending/movie/week?language=en-US`;\n\n  return fetch(url, options)\n    .then(res => {\n      if (!res.ok) {\n        throw new Error('Failed to fetch trending movies');\n      }\n      return res.json();\n    })\n    .then(data => {\n      // console.log('Fetched movies:', data.results);\n      return data.results;\n    }) // Возвращаем массив фильмов\n\n    .catch(error => {\n      console.error('Error fetching trending movies:', error);\n      return null; // Возвращаем null в случае ошибки\n    });\n}\n\nexport async function getMoviesByQuery(query, page = 1) {\n  const url = `${BASE_URL}/search/movie?query=${query}&page=${page}`;\n\n  const result = await fetch(url, options);\n\n  if (!result.ok) throw new Error('Fetch failed');\n\n  return result.json();\n}\n\nexport async function fetchMovieDetails(movie_id) {\n  const url = `${BASE_URL}/movie/${movie_id}`;\n  // console.log('Fetching from URL:', url);\n\n  const result = await fetch(url, options);\n  if (!result.ok) throw new Error('Failed to fetch movie details');\n  return result.json();\n}\n\nexport async function fetchMovieCredits(movie_id) {\n  const url = `${BASE_URL}/movie/${movie_id}/credits`;\n\n  const result = await fetch(url, options);\n  if (!result.ok) throw new Error('Failed to fetch movie credits');\n  return result.json();\n}\n\nexport async function fetchMovieReviews(movie_id) {\n  const url = `${BASE_URL}/movie/${movie_id}/reviews`;\n\n  const result = await fetch(url, options);\n  if (!result.ok) throw new Error('Failed to fetch movie reviews');\n  return result.json();\n}\n\nexport async function getActorsByQuery(query, page = 1) {\n  const url = `${BASE_URL}/search/person?query=${query}&page=${page}`;\n\n  const result = await fetch(url, options);\n  if (!result.ok) throw new Error('No actors are found here.');\n  return result.json();\n}\n\nexport async function getMoviesByActor(actor_id, page = 1) {\n  const url = `${BASE_URL}/discover/movie?with_cast=${actor_id}&page=${page}`;\n\n  const result = await fetch(url, options);\n  if (!result.ok) throw new Error('Failed to fetch the movies of this actor');\n  return result.json();\n}\n\nexport async function getActorPhotoAndInfo(actor_id) {\n  const url = `${BASE_URL}/person/${actor_id}`;\n\n  const result = await fetch(url, options);\n  if (!result.ok) throw new Error('Failed to fetch actor photo & info');\n  return result.json();\n}\n"],"names":["_ref","onClick","label","type","className","_jsx","s","children","text","isExpanded","setIsExpanded","useState","_jsxs","length","Button","toggleExpand","Reviews","movie_id","useParams","reviews","setReviews","error","setError","useEffect","async","fetchMovieReviews","results","err","console","message","getReviews","wrapperReviews","castListTitle","noReviewsMessage","listReviews","map","review","itemReviews","ExpandableText","content","autorDetailsContainer","imageReviews","src","author_details","avatar_path","spyPhoto","alt","username","autorDetailsContainerTwo","usernameReviews","ratingReviews","rating","spanNA","dateAtReviews","Date","created_at","toLocaleDateString","month","day","year","id","BASE_URL","options","method","headers","accept","Authorization","fetchTrendingMovies","fetch","then","res","ok","Error","json","data","catch","getMoviesByQuery","query","url","arguments","undefined","result","fetchMovieDetails","fetchMovieCredits","getActorsByQuery","getMoviesByActor","actor_id","getActorPhotoAndInfo"],"sourceRoot":""}