{"version":3,"file":"static/js/977.f7ccce79.chunk.js","mappings":"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","sources":["webpack://react-rework-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","services/movies-services.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castListTitle\":\"Cast_castListTitle__r4jTV\",\"castList\":\"Cast_castList__ARoWn\",\"castItem\":\"Cast_castItem__-Jcfe\",\"actorImage\":\"Cast_actorImage__IECZO\",\"default\":\"Cast_default__RymRA\",\"actorName\":\"Cast_actorName__XabVA\",\"characterName\":\"Cast_characterName__R1bgC\"};","import { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from '../../services/movies-services';\n\nimport defaultCastPhoto from '../../images/green-ava2 (1).webp';\nimport s from './Cast.module.css';\n\nconst Cast = () => {\n  const { movie_id } = useParams();\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        const credits = await fetchMovieCredits(movie_id);\n        setCast(credits.cast);\n      } catch (err) {\n        console.error('Error fetching cast:', err);\n        setError(err.message);\n      }\n    };\n\n    getCast();\n  }, [movie_id]);\n\n  if (error) return <p>Error: {error}</p>;\n\n  return (\n    <div className={s.wrapperCast}>\n      <h3 className={s.castListTitle}>CAST</h3>\n      <ul className={s.castList}>\n        {cast.map(actor => (\n          <Link className={s.linkMovieList} to={`/actors/${actor.id}/movies`}>\n            <li key={actor.id} className={s.castItem}>\n              <img\n                src={\n                  actor.profile_path\n                    ? `https://image.tmdb.org/t/p/w200/${actor.profile_path}`\n                    : defaultCastPhoto\n                }\n                alt={actor.name}\n                className={\n                  actor.profile_path\n                    ? s.actorImage\n                    : `${s.actorImage} ${s.default}`\n                }\n              />\n              <p className={s.actorName}>{actor.name}</p>\n              <p className={s.characterName}>\n                as {actor.character || 'Unknown'}\n              </p>\n              <p className={s.characterPopularity}>\n                Popularity: {actor.popularity || 'Unknown'}\n              </p>\n            </li>\n          </Link>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxYTQ0NWVhZTQwMTY5ODllMGM1ZjVmNzg5MDRhYzE0YyIsIm5iZiI6MTczMTU5OTQyNS4xMDgyNTcsInN1YiI6IjY1ZGY2NDg3Yjc2Y2JiMDE2M2Q4MzNkNiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.O8jUWu95b2bCdx3mildt7AG2oKspuZGBhdzndcu47T0',\n  },\n};\n\nexport async function fetchTrendingMovies() {\n  const url = `${BASE_URL}/trending/movie/week?language=en-US`;\n\n  return fetch(url, options)\n    .then(res => {\n      if (!res.ok) {\n        throw new Error('Failed to fetch trending movies');\n      }\n      return res.json();\n    })\n    .then(data => {\n      // console.log('Fetched movies:', data.results);\n      return data.results;\n    }) // Возвращаем массив фильмов\n\n    .catch(error => {\n      console.error('Error fetching trending movies:', error);\n      return null; // Возвращаем null в случае ошибки\n    });\n}\n\nexport async function getMoviesByQuery(query, page = 1) {\n  const url = `${BASE_URL}/search/movie?query=${query}&page=${page}`;\n\n  const result = await fetch(url, options);\n\n  if (!result.ok) throw new Error('Fetch failed');\n\n  return result.json();\n}\n\nexport async function fetchMovieDetails(movie_id) {\n  const url = `${BASE_URL}/movie/${movie_id}`;\n  // console.log('Fetching from URL:', url);\n\n  const result = await fetch(url, options);\n  if (!result.ok) throw new Error('Failed to fetch movie details');\n  return result.json();\n}\n\nexport async function fetchMovieCredits(movie_id) {\n  const url = `${BASE_URL}/movie/${movie_id}/credits`;\n\n  const result = await fetch(url, options);\n  if (!result.ok) throw new Error('Failed to fetch movie credits');\n  return result.json();\n}\n\nexport async function fetchMovieReviews(movie_id) {\n  const url = `${BASE_URL}/movie/${movie_id}/reviews`;\n\n  const result = await fetch(url, options);\n  if (!result.ok) throw new Error('Failed to fetch movie reviews');\n  return result.json();\n}\n\nexport async function getActorsByQuery(query, page = 1) {\n  const url = `${BASE_URL}/search/person?query=${query}&page=${page}`;\n\n  const result = await fetch(url, options);\n  if (!result.ok) throw new Error('No actors are found here.');\n  return result.json();\n}\n\nexport async function getMoviesByActor(actor_id, page = 1) {\n  const url = `${BASE_URL}/discover/movie?with_cast=${actor_id}&page=${page}`;\n\n  const result = await fetch(url, options);\n  if (!result.ok) throw new Error('Failed to fetch the movies of this actor');\n  return result.json();\n}\n\nexport async function getActorPhotoAndInfo(actor_id) {\n  const url = `${BASE_URL}/person/${actor_id}`;\n\n  const result = await fetch(url, options);\n  if (!result.ok) throw new Error('Failed to fetch actor photo & info');\n  return result.json();\n}\n"],"names":["Cast","movie_id","useParams","cast","setCast","useState","error","setError","useEffect","async","credits","fetchMovieCredits","err","console","message","getCast","_jsxs","children","className","s","wrapperCast","_jsx","castListTitle","castList","map","actor","Link","linkMovieList","to","id","castItem","src","profile_path","defaultCastPhoto","alt","name","actorImage","actorName","characterName","character","characterPopularity","popularity","BASE_URL","options","method","headers","accept","Authorization","fetchTrendingMovies","fetch","then","res","ok","Error","json","data","results","catch","getMoviesByQuery","query","url","arguments","length","undefined","result","fetchMovieDetails","fetchMovieReviews","getActorsByQuery","getMoviesByActor","actor_id","getActorPhotoAndInfo"],"sourceRoot":""}